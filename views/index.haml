- content_for :header do
  %h1= app_name

%h2= app_name
%p
  is a base for Concurrent/Distributed Computing with
  %a{:href => "http://en.wikipedia.org/wiki/Linda_(coordination_language)"} Linda
  and
  %a{:href => "https://github.com/shokai/sinatra-rocketio"} RocketIO
  \.
%p #{app_name} provides library for Ruby and JavaScript clients.

%h2 Usage
%p read/write Tuples at
%p #{app_root}/(TupleSpace)/(Tuple)
%p
  %h3 Examples
  %ul
    %li
      - url = "#{app_root}/myhome/say/hello"
      %a{:href => url}= url
      %br
      Write a Tuple ["say", "hello"] into TupleSpace "myhome".
    %li
      - url = "https://github.com/shokai/linda-mac-say"
      %a{:href => url}= url
      %br
      Watch ["say", String] and execute 'say' command in Mac. Then write ["door", String, "success"].
    %li
      - url = "#{app_root}/myhome/sensor"
      %a{:href => url}= url
      %br
      You can watch ["sensor"] values in TupleSpace "myhome".
    %li
      - url = "https://github.com/shokai/linda-arduino-sensor"
      %a{:href => url}= url
      %br
      Read Arduino's sensor values and write Tuples ["sensor", "light", 120] and ["sensor", "temperature", 25].
    %li
      - url = "https://github.com/shokai/linda-temperature-alert"
      %a{:href => url}= url
      %br
      Alert temperature. Read a Tuple ["sensor", "temperature"] and write a Tuple ["say", "current temperature is 25"] or ["say", "current temperature is 8, too cold."] .
    %li
      - url = "#{app_root}/myhome/door/open"
      %a{:href => url}= url
      %br
      Write a Tuple ["door", "open"] into TupleSpace "myhome".
    %li
      - url = "https://github.com/shokai/linda-door-phidgets-servo"
      %a{:href => url}= url
      %br
      Read a Tuple ["door", "open"] and open door-key with Phidgets Servo-motor. Then write a Tuple ["door", "open", "success"].
    %li
      - url = "https://github.com/shokai/linda-door-open-goldfish"
      %a{:href => url}= url
      %br
      Write a Tuple ["door", "open"] into TupleSpace with Ajax POST on GoldFish.
